A TBL QUE VEM NO 'FROM' ESTÁ NO 'LADO ESQUERDO' NOS 'JOIN' E TEM PRIORIDADE PERANTE OS JOINS

INNER JOIN PEGA APENAS OS 'CAMPOS IGUAIS' ENTRE AS TBLS
LEFT JOIN PEGA TODOS OS CAMPOS DA ESQUERDA SEM SE IMPORTAR COM OS DA DIREITA
RIGHT JOIN PEGA TODOS OS CAMPOS DA DIREITA SEM SE IMPORTAR COM OS DA ESQUERDA

EXITEM FUNÇÕES DE AGREGAÇÃO (INCLUI FUNÇÕES MATEMATICAS). TUDO QUE NÃO É UM FUNÇÃO DE AGREGAÇÃO DEVE IR PARA O 'GROUP BY'.
	- SYNTAX: group by <nome do campo a usar como grupo>; (É POSSIVEL AGRUPAR DE MULTIPLAS FORMAS DENTRO DE APENAS UM GROUP BY)
PARA DEFINIR A ORDEM DA LISTA UTILIZA-SE 'ORDER BY'
	- SYNTAX: order by <nome do campo a usar como referencia>; (É POSSÍVEL ADD DIVERSOS CAMPOS P/ORDENAÇÃO, UTILIZANDO A ORDEM DELES COMO PRIORIDADE)

'LIKE' É IGUAL A '=' P/STRING. '00000%' ANTES DA '%' OS CARACTERES SÃO IGUAIS, DEPOIS PODEM SER DIFERENTES (UTILIZADO PARA BUSCAS DINAMICAS)

'create view <nome> as'... (CRIA UM 'OBJETO' PARA COMPILAR UMA CONSULTA, A REPRESENTANDO ATRAVES DE UM NOME. RECOMENDADO PARA UTILIZAR EM GRANDES SELECTS)
É CHAMADO ATRAVES DE: 'select * from <nome da view>' (É POSSIVEL UTILIZAR WHERE USANDO COMO BASE O SELECT REFERIDO, SEM MUDAR O SELECT)

É POSSIVEL DEFINIR 2 CAMPOS COMO UMA PRIMARY KEY PRA UMA UNICA TBL UTILIZANDO CONSTRAINT